<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://www.wago.com/security/firewall"
           elementFormDefault="qualified"
           xmlns="http://www.wago.com/security/firewall"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!--
    README:

    Base types for firewall configuration files validation.


    Please note that there are several arbitrary choosen restrictions included
    in the regex's below:
    - maximum lenght of a generic name,
    - maximum count of allowed simultaneous connections,
    - maximum lenght of an interface name,
    - maximum lenght of a limit number,
    - maximum lenght of a burst number,
    - maximum lenght of a logging tag,
    - 'proto' type may not include all recognized protocol names.
    All numbers are not dictated by any specific reasoning except for the need
    for such a limit to exists - for security reasons. All of them may be
    freely changed but they should not be set to unbounded value, like e.g. '*'
    or '+'.
 -->

<xs:simpleType name="name">
    <xs:annotation>
        <xs:documentation>Generic name.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="[a-zA-Z_ ][a-zA-Z0-9_\-]{0,19}"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="conn_count">
    <xs:annotation>
        <xs:documentation>Count of all simultaneous connections allowed.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:unsignedShort">
        <xs:minInclusive value="0"/>
        <xs:maxInclusive value="4000"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="yesno">
    <xs:restriction base="xs:string">
        <xs:pattern value="(yes|no)"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="onoff">
    <xs:restriction base="xs:string">
        <xs:pattern value="(on|off)"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="dir">
    <xs:annotation>
        <xs:documentation>Mode of filtering: 'uni' for incoming traffic only or 'bi' for both incoming and outgoing traffic streams.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="(uni|bi)"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="ifname">
    <xs:annotation>
        <xs:documentation>Network interface name, e.g. eth0, wan0, etc.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="[\+a-zA-Z0-9]{1,20}"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="ifstate">
    <xs:annotation>
        <xs:documentation>State of an interface, 'open' for non-filtered and 'filtered' for filtered interfaces.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="(open|filtered)"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="ifmac">
    <xs:annotation>
        <xs:documentation>Ethernet MAC address.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="[a-fA-F0-9]{1,2}(:[a-fA-F0-9]{1,2}){5}"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="ifmac_mask">
    <xs:annotation>
        <xs:documentation>Ethernet MAC address mask.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="[a-fA-F0-9]{1,2}(:[a-fA-F0-9]{1,2}){5}"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="limit">
    <xs:annotation>
        <xs:documentation>Match limit put on firewall rule.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="[1-9][0-9]{0,5}/(second|minute|hour|day)"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="burst">
    <xs:annotation>
        <xs:documentation>Match burst limit put on firewall rule.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="[1-9][0-9]{0,5}"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="tag">
    <xs:annotation>
        <xs:documentation>Logging tag.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="[a-zA-Z_ ][a-zA-Z0-9_\- ]{0,19}"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="level">
    <xs:annotation>
        <xs:documentation>Logging level - ebtables only.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="(emerg|alert|crit|error|warning|notice|info|debug)"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="mode">
    <xs:annotation>
        <xs:documentation>Mode of work of Ethernet firewall (ebtables). For details see firewall sec.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="(all-allow|whitelist)"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="policy">
    <xs:restriction base="xs:string">
        <xs:pattern value="(drop|accept)"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="eproto">
    <xs:annotation>
        <xs:documentation>
            Type of protocol enclosed into an Ethernet frame.
            See /etc/ethertypes for tips about its meaning.
            Please note that both ARP and IPv4 are added by default.
        </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="(IPv4|ARP|IPv6|0x(0[a-zA-Z6-9][a-zA-Z0-9]{2}|[a-zA-Z1-9][a-zA-Z0-9]{3}))"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="proto">
    <xs:restriction base="xs:string">
        <xs:pattern value="(tcp|udp|udplite|icmp|esp|ah|sctp|mh|all|([1-9][0-9]{0,1}|1[0-9]{2}|2[0-4][0-9]|25[0-5]))"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="tcpudp">
    <xs:restriction base="xs:string">
        <xs:pattern value="(tcp|udp|tcpudp)"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="port">
    <xs:restriction base="xs:unsignedShort"/>
</xs:simpleType>

<xs:simpleType name="port_range">
    <xs:annotation>
        <xs:documentation>Range of ports, e.g. '1024:65535'. In short: port(:port){0,1}</xs:documentation>
        <xs:documentation>TODO: Any idea how to simplify it?.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
        <xs:pattern value="([0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6([0-4][0-9]{3}|5([0-4][0-9]{2}|5([0-2][0-9]|3[0-5]))))(:([0-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6([0-4][0-9]{3}|5([0-4][0-9]{2}|5([0-2][0-9]|3[0-5]))))){0,1}"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="ip4">
    <xs:restriction base="xs:string">
        <xs:pattern value="([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])){3}"/>
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="ip4mask">
    <xs:restriction base="xs:string">
        <xs:pattern value="([0-9]|[1-2][0-9]|3[0-2])|((255.){3}(0|128|192|224|240|248|252|254|255))|((255.){2}(0|128|192|224|240|248|252|254|255).0)|(255.(0|128|192|224|240|248|252|254|255).0.0)|((0|128|192|224|240|248|252|254|255).0.0.0)"/>
    </xs:restriction>
</xs:simpleType>

</xs:schema>

